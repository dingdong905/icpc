#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll MAXN = 2e7 + 5;
#define uint unsigned int
uint seed;
/*
* b[i] 表示 for all k(i%k==0) a[k1]+a[k2]+a[k3]+....+a[kcnt]   
*/
uint a[MAXN], b[MAXN], vis[MAXN], prime[MAXN], cnt;
inline uint getnext() {
	seed ^= seed << 13;
	seed ^= seed >> 17;
	seed ^= seed << 5;
	return seed;
}
void Euler_Prime(ll n) {
	for (ll i = 2; i <= n; i++) {
		if (!vis[i]) 
			prime[++cnt] = i;
		for (ll j = 1; j <= cnt && i * prime[j] <= n; j++) {
			vis[i * prime[j]] = true;
			if (i % prime[j] == 0)
				break;
		}
	}
}
int main() {
	ll n;
	cin >> n >> seed;
	for (ll i = 1; i <= n; i++) {
		a[i] = getnext();
		b[i] = a[i];
	}
	Euler_Prime(n);
	for (ll i = 1; i <= cnt; i++)
		for (ll j = 1; j * prime[i] <= n; j++)
			b[j * prime[i]] += b[j];
	ll ans = 0;
	for (ll i = 1; i <= n; i++)
		ans ^= b[i];
	printf("%lld\n", ans);
	return 0;
}